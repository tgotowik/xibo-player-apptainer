Bootstrap: docker
From: ubuntu:jammy

%post
# After install (guest)

  # update && upgrade
  apt update
  apt upgrade -y

  # debugging and other tools
  apt install -y nano less wget

  # set timezone and locales
  ln -fs /usr/share/zoneinfo/Europe/Berlin /etc/localtime
  DEBIAN_FRONTEND=noninteractive apt-get install -y keyboard-configuration
  # install tzdata
  DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata
  dpkg-reconfigure --frontend noninteractive tzdata

  # install xorg xauth for display
  apt install xorg xauth -y
  # install cabextract
  apt install -y cabextract
  # https://gstreamer.freedesktop.org/documentation/installing/on-linux.html?gi-language=c#
  apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio
  
  # install wine latest stable: 8.0.2, winetricks
  dpkg --add-architecture i386 
  mkdir -pm755 /etc/apt/keyrings
  wget -O /etc/apt/keyrings/winehq-archive.key https://dl.winehq.org/wine-builds/winehq.key
  wget -NP /etc/apt/sources.list.d/ https://dl.winehq.org/wine-builds/ubuntu/dists/jammy/winehq-jammy.sources
  apt update
  apt install -y --install-recommends winehq-stable
  apt install -y winetricks
  # install several dependencies
  # libvulkan.1.so l
  apt install -y libvulkan1 libvulkan1:i386
  # ????? not sure about that ??????????
  apt install -y winbind
  apt install -y mono-complete
  apt install -y vulkan-tools
  apt install -y pciutils  
  apt install -y nvidia-driver-535

  # create user for wine/tricks
  useradd -m -s /bin/bash xuser
  usermod -aG sudo xuser
  chown xuser:xuser -R /home/xuser

  # set wineprefix wine32
  su - xuser -c "echo 'export WINEPREFIX=\$HOME/.wine32 WINEARCH=win32' >> \$HOME/.bashrc"
  su - xuser -c "echo 'export DISPLAY=:1' >> \$HOME/.bashrc"
  su - xuser -c "mkdir -p \$HOME/.wine32"
  su - xuser -c "chmod -R 755 \$HOME/.wine32"
  # configure wine/tricks
  su - xuser -c "WINEPREFIX=\$HOME/.wine32 WINEARCH=win32 winecfg -v win10"
  su - xuser -c "WINEPREFIX=\$HOME/.wine32 WINEARCH=win32 winetricks --force -q dotnet472"
  su - xuser -c "WINEPREFIX=\$HOME/.wine32 WINEARCH=win32 winetricks -q corefonts dxvk nocrashdialog"
  # Download and install xibo-client
  su - xuser -c "wget 'https://github.com/xibosignage/xibo-dotnetclient/releases/download/3R310/xibo-client-v3-R310.1-win32-x86.msi'"
  su - xuser -c "WINEPREFIX=\$HOME/.wine32 WINEARCH=win32 wine ./xibo-client-v3-R310.1-win32-x86.msi"
  # disable watchdog --> The watchdog program does not work at all. Either it gets stuck in a loop of spawning processes or starts leaking memory, causing the Linux kernel to terminate Wine all together once available memory runs out.
  su - xuser -c "mv '\$HOME/.wine32/drive_c/Program\ Files/Xibo\ Player/watchdog/x64/XiboClientWatchdog.exe' '\$HOME/.wine32/drive_c/Program\ Files/Xibo\ Player/watchdog/x64/DXiboClientWatchdog.exe'"
  su - xuser -c "mv '\$HOME/.wine32/drive_c/Program\ Files/Xibo\ Player/watchdog/x86/XiboClientWatchdog.exe' '\$HOME/.wine32/drive_c/Program\ Files/Xibo\ Player/watchdog/x86/DXiboClientWatchdog.exe'"

%runscript
# Script to run when executing environment

%startscript
# Script to run when executing as instance

%labels

%files
# Files to copy from the host system

%environment
# Environment variables

%help
# Text to show when help for the image is requested
For help contact: https://github.com/tgotowik/xibo-player-apptainer
